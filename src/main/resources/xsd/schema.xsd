<xs:schema xmlns="http://github.com/Justis-Lamanna/botSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://github.com/Justis-Lamanna/botSchema.xsd"
    targetNamespace="http://github.com/Justis-Lamanna/botSchema.xsd"
    elementFormDefault="qualified">
    <xs:element name="bot" type="tns:DTDBot"/>

    <xs:simpleType name="NonEmptyString">
        <xs:annotation>
            <xs:documentation>Any string that is nonempty</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="I18NString">
        <xs:simpleContent>
            <xs:extension base="tns:NonEmptyString">
                <xs:attribute name="i18n" type="xs:boolean"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="UnboundedString">
        <xs:annotation>
            <xs:documentation>The literal string "unbounded"</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="unbounded"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="IntOrUnbounded">
        <xs:annotation>
            <xs:documentation>A non-negative integer, or the literal string "unbounded". Used for range ends.</xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="xs:nonNegativeInteger tns:UnboundedString"/>
    </xs:simpleType>

    <xs:complexType name="DTDRange">
        <xs:sequence>
            <xs:element minOccurs="0" type="xs:nonNegativeInteger" name="min" default="0"/>
            <xs:element minOccurs="0" type="tns:IntOrUnbounded" name="max" default="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDValueOrRange">
        <xs:choice>
            <xs:element name="value" type="tns:IntOrUnbounded"/>
            <xs:element name="range" type="tns:DTDRange"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="DTDCustomClass">
        <xs:sequence>
            <xs:element name="class" type="xs:string"/>
            <xs:element name="method" type="xs:string" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- End Utility Stuff -->

    <xs:complexType name="DTDBot">
        <xs:sequence>
            <xs:element name="configuration" type="tns:DTDConfigurationGroup" minOccurs="0"/>
            <xs:element name="channelsets" type="tns:DTDChannelsets" minOccurs="0"/>
            <xs:element name="usersets" type="tns:DTDUsersets" minOccurs="0"/>
            <xs:element name="behaviors" type="tns:DTDBehaviors"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Configuration -->
    <xs:complexType name="DTDConfigurationGroup">
        <xs:sequence>
            <xs:element name="discord" type="tns:DTDDiscordConfiguration" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDConfiguration">
        <xs:sequence>
            <xs:element name="i18n" type="xs:anyURI" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- End Configuration -->

    <!-- Usersets -->
    <xs:complexType name="DTDAbstractFilterSet" abstract="true">
        <xs:attribute name="blacklist" type="xs:boolean" default="false"/>
        <xs:attribute name="extends" type="xs:string" default=""/>
    </xs:complexType>

    <xs:complexType name="DTDUsersets">
        <xs:sequence>
            <xs:element name="userset" type="tns:DTDUserset" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDUserset">
        <xs:complexContent>
            <xs:extension base="tns:DTDAbstractFilterSet">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:choice>
                        <xs:element name="discord" type="tns:DTDDiscordUserset"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DTDDiscordUserset">
        <xs:sequence>
            <xs:element name="users" minOccurs="0" type="tns:DTDSnowflakes" />
            <xs:element name="roles" minOccurs="0" type="tns:DTDSnowflakes" />
        </xs:sequence>
    </xs:complexType>
    <!-- End Usersets -->

    <!-- Channelsets -->

    <!-- End Channelsets -->
    <xs:complexType name="DTDChannelsets">
        <xs:sequence>
            <xs:element name="channelset" type="tns:DTDChannelset" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDChannelset">
        <xs:complexContent>
            <xs:extension base="tns:DTDAbstractFilterSet">
                <xs:sequence>
                    <xs:element name="name" type="xs:string"/>
                    <xs:choice>
                        <xs:element name="discord" type="tns:DTDDiscordChannelset"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DTDDiscordChannelset">
        <xs:sequence>
            <xs:element name="guilds" minOccurs="0" type="tns:DTDSnowflakes"/>
            <xs:element name="channels" minOccurs="0" type="tns:DTDSnowflakes"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Behaviors -->
    <xs:complexType name="DTDBehaviors">
        <xs:sequence>
            <xs:element name="behavior" type="tns:DTDBehavior" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDBehavior">
        <xs:choice>
            <xs:element name="command" type="tns:DTDCommand"/>
        </xs:choice>
    </xs:complexType>
    <!-- End Behaviors -->

    <!-- Commands -->
    <xs:complexType name="DTDCommand">
        <xs:choice>
            <xs:element name="custom" type="tns:DTDCustomClass"/>
            <xs:sequence>
                <xs:element name="id" type="tns:NonEmptyString"/>
                <xs:choice minOccurs="0">
                    <xs:element name="names">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="name" type="tns:I18NString" maxOccurs="unbounded"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="namesFrom" type="tns:NonEmptyString"/>
                </xs:choice>
                <xs:element name="filter" type="tns:DTDCommandFilter" minOccurs="0"/>
                <xs:choice>
                    <xs:element name="action" type="tns:DTDCommandAction"/>
                    <xs:element name="actions" type="tns:DTDActionWithFilters"/>
                </xs:choice>
            </xs:sequence>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="DTDCommandFilter">
        <xs:sequence>
            <xs:element name="enabled" type="xs:boolean" default="true" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <!-- End Commands -->

    <!-- Actions -->
    <xs:complexType name="DTDCommandActions">
        <xs:sequence>
            <xs:element name="action" type="tns:DTDCommandAction" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDCommandAction">
        <xs:choice>
            <xs:element name="message" type="tns:I18NString"/>
            <xs:element name="alert" type="tns:I18NString"/>
            <xs:element name="random" type="tns:DTDWeightedCommandActions"/>
            <xs:element name="sequence" type="DTDCommandActions"/>
            <xs:element name="custom" type="DTDCustomClass"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="DTDWeightedCommandActions">
        <xs:sequence>
            <xs:element name="action" type="tns:DTDWeightedCommandAction" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDWeightedCommandAction">
        <xs:complexContent>
            <xs:extension base="tns:DTDCommandAction">
                <xs:attribute name="weight" type="xs:float" default="1.0"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DTDActionFilter">
        <xs:sequence>
            <xs:element name="enabled" type="xs:boolean" default="true" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDActionWithFilters">
        <xs:sequence>
            <xs:element name="option" type="tns:DTDActionWithFilter" maxOccurs="unbounded"/>
            <xs:element name="default" type="tns:DTDCommandAction" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDActionWithFilter">
        <xs:sequence>
            <xs:element name="filter" type="tns:DTDActionFilter" minOccurs="0"/>
            <xs:element name="action" type="tns:DTDCommandAction"/>
        </xs:sequence>
    </xs:complexType>
    <!-- End Actions -->

    <!-- Discord -->
    <xs:complexType name="DTDSnowflakes">
        <xs:sequence>
            <xs:element name="snowflake" type="tns:DTDSnowflake" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DTDSnowflake">
        <xs:simpleContent>
            <xs:extension base="xs:long"/>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="DTDDiscordConfiguration" >
        <xs:complexContent>
            <xs:extension base="tns:DTDConfiguration">
                <xs:sequence>
                    <xs:element name="token" type="tns:NonEmptyString"/>
                    <xs:element name="prefix" type="tns:NonEmptyString" minOccurs="0"/>
                    <xs:element name="owner" type="tns:DTDSnowflake" minOccurs="0"/>
                    <xs:element name="presence" type="tns:DTDDiscordPresence" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="DTDDiscordPresence">
        <xs:sequence>
            <xs:element name="status" minOccurs="0">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="ONLINE"/>
                        <xs:enumeration value="DO_NOT_DISTURB"/>
                        <xs:enumeration value="IDLE"/>
                        <xs:enumeration value="INVISIBLE"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:choice minOccurs="0">
                <xs:element name="playing" type="xs:string"/>
                <xs:element name="listening" type="xs:string"/>
                <xs:element name="watching" type="xs:string"/>
                <xs:element name="streaming">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="title" type="xs:string"/>
                            <xs:element name="url" type="xs:anyURI"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <!-- End Discord -->
</xs:schema>