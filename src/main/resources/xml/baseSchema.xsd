<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:tns="http://github.com/Justis-Lamanna/baseSchema.xsd"
           targetNamespace="http://github.com/Justis-Lamanna/baseSchema.xsd"
           elementFormDefault="qualified">
    <!--Common useful things-->
    <xs:simpleType name="NonEmptyString">
        <xs:annotation>
            <xs:documentation>Any string that is nonempty</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="\S+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="UnboundedString">
        <xs:annotation>
            <xs:documentation>The literal string "unbounded"</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="unbounded"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="IntOrUnbounded">
        <xs:annotation>
            <xs:documentation>A non-negative integer, or the literal string "unbounded". Used for range ends.</xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="xs:nonNegativeInteger tns:UnboundedString"/>
    </xs:simpleType>

    <xs:complexType name="FromProviderString">
        <xs:annotation>
            <xs:documentation>A string with attributes "fromProvider" and "default"</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="tns:NonEmptyString">
                <xs:attribute name="fromProvider" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>If marked as fromProvider, the text body is treated as a key to the bot's value providers, and will be resolved at runtime.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Configuration">
        <xs:sequence>
            <xs:element name="providers" type="tns:Providers" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Providers">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="env" type="tns:EnvironmentProvider"/>
            <xs:element name="i18n" type="tns:I18nProvider"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="EnvironmentProvider">
        <xs:attribute name="prefix" type="xs:string"/>
        <xs:attribute name="suffix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="I18nProvider">
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="prefix" type="xs:string"/>
                <xs:attribute name="suffix" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
</xs:schema>