<xs:schema xmlns="http://github.com/Justis-Lamanna/botSchema.xsd"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://github.com/Justis-Lamanna/botSchema.xsd"
    targetNamespace="http://github.com/Justis-Lamanna/botSchema.xsd"
    elementFormDefault="qualified">
    <xs:element name="bot" type="tns:Bot"/>

    <xs:simpleType name="NonEmptyString">
        <xs:annotation>
            <xs:documentation>Any string that is nonempty</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:minLength value="1"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="UnboundedString">
        <xs:annotation>
            <xs:documentation>The literal string "unbounded"</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="unbounded"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="IntOrUnbounded">
        <xs:annotation>
            <xs:documentation>A non-negative integer, or the literal string "unbounded". Used for range ends.</xs:documentation>
        </xs:annotation>
        <xs:union memberTypes="xs:nonNegativeInteger tns:UnboundedString"/>
    </xs:simpleType>

    <xs:complexType name="FromProviderString">
        <xs:annotation>
            <xs:documentation>A string with attributes "fromProvider" and "default"</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="tns:NonEmptyString">
                <xs:attribute name="fromProvider" type="xs:boolean" default="false">
                    <xs:annotation>
                        <xs:documentation>If marked as fromProvider, the text body is treated as a key to the bot's value providers, and will be resolved at runtime.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Configuration">
        <xs:sequence>
            <xs:element name="providers" type="tns:Providers" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Providers">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="env" type="tns:EnvironmentProvider"/>
            <xs:element name="i18n" type="tns:I18nProvider"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="EnvironmentProvider">
        <xs:attribute name="prefix" type="xs:string"/>
        <xs:attribute name="suffix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="I18nProvider">
        <xs:simpleContent>
            <xs:extension base="xs:anyURI">
                <xs:attribute name="prefix" type="xs:string"/>
                <xs:attribute name="suffix" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Bot">
        <xs:sequence>
            <xs:element name="configuration" type="tns:ConfigurationGroup" minOccurs="0"/>
            <xs:element name="commands" type="tns:CommandList"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ConfigurationGroup">
        <xs:sequence>
            <xs:element name="global" type="tns:Configuration" minOccurs="0"/>
            <xs:element name="discord" type="tns:DiscordConfiguration" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CommandList">
        <xs:sequence>
            <xs:element name="command" type="tns:Command" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Command">
        <xs:sequence>
            <xs:element name="name" type="tns:FromProviderString"/>
            <xs:choice minOccurs="0">
                <xs:element name="aliases">
                    <xs:complexType>
                        <xs:sequence>
                            <xs:element name="alias" type="tns:FromProviderString" maxOccurs="unbounded"/>
                        </xs:sequence>
                    </xs:complexType>
                </xs:element>
                <xs:element name="aliasesFrom" type="tns:NonEmptyString"/>
            </xs:choice>
            <xs:element name="behaviors">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="behavior" type="tns:Behavior" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Behavior">
        <xs:sequence>
            <xs:element name="parameters" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="parameter" type="tns:Parameter" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="action" type="tns:Action"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Parameter">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="index" type="xs:nonNegativeInteger" default="2147483647"/>
                <xs:attribute name="startIndex" type="xs:nonNegativeInteger" default="2147483647"/>
                <xs:attribute name="endIndex" type="tns:IntOrUnbounded" default="2147483647"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="Action">
        <xs:choice>
            <xs:element name="respond" type="tns:FromProviderString"/>
            <xs:element name="random">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="action" type="tns:WeightedAction" maxOccurs="unbounded"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="WeightedAction">
        <xs:complexContent>
            <xs:extension base="tns:Action">
                <xs:attribute name="weight" type="xs:float" default="1.0"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="DiscordTokenLiteral">
        <xs:restriction base="xs:string">
            <xs:pattern value="[A-Za-z0-9.]{59}"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="DiscordTokenFromProvider">
        <xs:simpleContent>
            <xs:extension base="tns:NonEmptyString">
                <xs:attribute name="default" type="tns:DiscordTokenLiteral"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="DiscordConfiguration" >
        <xs:complexContent>
            <xs:extension base="tns:Configuration">
                <xs:sequence>
                    <xs:element name="token" type="tns:FromProviderString"/>
                    <xs:element name="prefix" type="tns:FromProviderString" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

</xs:schema>